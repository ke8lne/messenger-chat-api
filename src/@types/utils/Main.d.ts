import { formatDeltaEvent, formatDeltaMessage, formatDeltaReadReceipt, formatID, formatPresence, formatProxyPresence, formatRead, formatReadReceipt, formatThread, formatType } from "./format";
import formatHistoryMessage, { formatMessage } from "./formatHistoryMessage";
import generateOfflineThreadingID from "./generateOfflineThreadingID,";
import generateAccessiblityCookie from "./generateAccessibilityCookie";
import generateTimestampRelative from "./generateTimestampRelative";
import getAdminTextMessageType from "./getAdminTextMessageType";
import generateThreadingID from "./generateThreadingID";
import { _formatAttachment } from "./forwardAttachment";
import decodeClientPayload from "./decodeClientPayload";
import parseAndCheckLogin from "./parseCheckAndLogin";
import { formatCookie, saveCookies } from "./cookies";
import generatePresence from "./generatePresenece";
import isReadableStream from "./isReadableStream";
import getSignatureID from "./getSignatureID";
import postFormData from "./postFormData";
import makeDefaults from "./makeDefaults";
import makeParsable from "./makeParsable";
import getAppState from "./getAppState";
import arrToForm from "./arrayToForm";
import getFrom from "./getForm";
import getGUID from "./getGUID";
import request from "request";
import getType from "./getType";
import formatDate from "./Date";
import post from "./post";
import get from "./get";
export default function (): {
    isReadableStream: typeof isReadableStream;
    get: typeof get;
    post: typeof post;
    postFormData: typeof postFormData;
    generateThreadingID: typeof generateThreadingID;
    generateOfflineThreadingID: typeof generateOfflineThreadingID;
    getGUID: typeof getGUID;
    getFrom: typeof getFrom;
    makeParsable: typeof makeParsable;
    arrToForm: typeof arrToForm;
    getSignatureID: typeof getSignatureID;
    getJar: (store?: any) => request.CookieJar;
    generateTimestampRelative: typeof generateTimestampRelative;
    makeDefaults: typeof makeDefaults;
    parseAndCheckLogin: typeof parseAndCheckLogin;
    saveCookies: typeof saveCookies;
    getType: typeof getType;
    _formatAttachment: typeof _formatAttachment;
    formatHistoryMessage: typeof formatHistoryMessage;
    formatID: typeof formatID;
    formatMessage: typeof formatMessage;
    formatDeltaEvent: typeof formatDeltaEvent;
    formatDeltaMessage: typeof formatDeltaMessage;
    formatProxyPresence: typeof formatProxyPresence;
    formatPresence: typeof formatPresence;
    formatType: typeof formatType;
    formatDeltaReadReceipt: typeof formatDeltaReadReceipt;
    formatCookie: typeof formatCookie;
    formatThread: typeof formatThread;
    formatReadReceipt: typeof formatReadReceipt;
    formatRead: typeof formatRead;
    generatePresence: typeof generatePresence;
    generateAccessiblityCookie: typeof generateAccessiblityCookie;
    formatDate: typeof formatDate;
    decodeClientPayload: typeof decodeClientPayload;
    getAppState: typeof getAppState;
    getAdminTextMessageType: typeof getAdminTextMessageType;
};
